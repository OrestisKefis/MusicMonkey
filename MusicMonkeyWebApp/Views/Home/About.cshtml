@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "About";
}


<!-- Breadcrumb Begin -->
<div class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__links">
                    <a href="/"><i class="fa fa-home"></i> Home</a>
                    <span>@ViewBag.Title</span>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Breadcrumb End -->
<!-- Skills Section Begin -->
<section class="skills spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 p-0">
                <div class="skills__content">
                    <div class="section-title">
                        <h2>Live the experience</h2>
                        <h1>Music we love</h1>
                    </div>
                    <p>
                        Music Monkey transformed music listening forever when it launched in 2008. Discover, manage and share over 80 million tracks, 
                        including more than 4 million podcast titles, for free, or upgrade to Music Monkey Premium to access exclusive features for music!
                        
                    </p>
                    <div class="skill__bar__item">
                        <p>Quality Sound</p>
                        <div id="bar1" class="barfiller">
                            <span class="tip"></span>
                            <span class="fill" data-percentage="95"></span>
                        </div>
                    </div>
                    <div class="skill__bar__item">
                        <p>Creativity</p>
                        <div id="bar2" class="barfiller">
                            <span class="tip"></span>
                            <span class="fill" data-percentage="85"></span>
                        </div>
                    </div>
                    <div class="skill__bar__item">
                        <p>Abundance</p>
                        <div id="bar3" class="barfiller">
                            <span class="tip"></span>
                            <span class="fill" data-percentage="98"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-lg-6 p-0">
                <div class="skills__video set-bg" data-setbg="/Content/Assets/img/skill-video.jpg">
                    <a href="https://www.youtube.com/watch?v=S19UcWdOA-I?autoplay=1" class="play-btn video-popup"><i class="fa fa-play"></i></a>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- Skills Section End -->
<!-- About Section Begin -->
@*<section class="about about--page spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-6">
                <div class="about__pic">
                    <img src="img/about/about.png" alt="">
                </div>
            </div>
            <div class="col-lg-6">
                <div class="about__text">
                    <div class="section-title">
                        <h2>He heard something that he knew to be music</h2>
                    </div>
                    <p>
                        At vero eos et accusamus et iusto odi odgnissimos ducimus qui blanditiis praesentium volup
                        tatum deleniti atque corrupti quos dolores et quas molestias excepturi sint occaecati
                        cupiditate non provident, similique sunt in culpa qui officia deserunt mollitia animi quod
                        justo pro an.
                    </p>
                    <img src="img/about/signature.png" alt="">
                </div>
            </div>
        </div>
    </div>
</section>*@
<!-- About Section End -->
<!-- About Pic Begin -->
<div class="about-pic">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-6">
                <div class="row">
                    <div class="col-lg-4 col-md-4 col-sm-4 p-0">
                        <img src="img/about/ap-1.jpg" alt="">
                        <img src="img/about/ap-2.jpg" alt="">
                    </div>
                    <div class="col-lg-8 col-md-8 col-sm-8 p-0">
                        <img src="img/about/ap-3.jpg" alt="">
                    </div>
                </div>
            </div>
            <div class="col-lg-6">
                <div class="row">
                    <div class="col-lg-8 col-md-8 col-sm-8 p-0">
                        <img src="img/about/ap-4.jpg" alt="">
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-4 p-0">
                        <img src="img/about/ap-5.jpg" alt="">
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-4 p-0">
                        <img src="img/about/ap-6.jpg" alt="">
                    </div>
                    <div class="col-lg-8 col-md-8 col-sm-8 p-0">
                        <img src="img/about/ap-7.jpg" alt="">
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- About Pic End -->
<!-- About Services Section Begin -->
<section class="about-services spad">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="section-title center-title">
                    <h2>WHERE DO I PLAY</h2>
                    <h1>Best service</h1>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-4 col-md-6 col-sm-6">
                <div class="about__services__item">
                    <div class="about__services__item__pic set-bg" data-setbg="/Content/Assets/img/services/service-gym.jpg">
                        <div class="icon">
                            <img src="img/services/as-icon-1.png" alt="">
                        </div>
                    </div>
                    <div class="about__services__item__text">
                        <h4>Training</h4>
                        <p>Adjust your playlist to your gym with updates every month!.</p>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-6 col-sm-6">
                <div class="about__services__item">
                    <div class="about__services__item__pic set-bg" data-setbg="/Content/Assets/img/services/as-2.jpg">
                        <div class="icon">
                            <img src="img/services/as-icon-2.png" alt="">
                        </div>
                    </div>
                    <div class="about__services__item__text">
                        <h4>Clubs and bar</h4>
                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod.</p>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 col-md-6 col-sm-6">
                <div class="about__services__item">
                    <div class="about__services__item__pic set-bg" data-setbg="/Content/Assets/img/services/as-3.jpg">
                        <div class="icon">
                            <img src="img/services/as-icon-3.png" alt="">
                        </div>
                    </div>
                    <div class="about__services__item__text">
                        <h4>Corporate events</h4>
                        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!-- About Services Section End -->


    @*<style>
        .chartBox {
            padding: 20px;
            border-radius: 15px;
            border: solid 3px rgba(1, 26, 104, 5);
            background: white;
        }
    </style>
<body>

    <div class="container">

        <div class="col-12 text-center">
            <hr />
            <h3 id="chartTitle">Most Popular Artists</h3>
            <hr />
            <div class="chartBox">
                <canvas id="myChart" width="200" height="100"></canvas>
                <hr />
                <div class="text-lg-left">
                    <select onchange="renderChart(this)" style="color: purple; border-color: mediumpurple; font-size: medium; border-style:dotted">
                        <option value="1st chart">1st chart</option>
                        <option value="2nd chart">2nd chart</option>
                        <option value="3rd chart">3rd chart</option>
                        <option value="4th chart">4th chart</option>
                        <option value="5th chart">5th chart</option>
                    </select>

                </div>
            </div>
        </div>
    </div>




    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


    <script>

        let chartTitle = document.querySelector('#chartTitle');

        //var settings = {
        //    "url": "https://localhost:44314/api/TrackApi",
        //    "method": "GET",
        //    "timeout": 0,
        //};

        //$.ajax(settings).done(function (tracks) {
        //    console.log(tracks);
        //    const popularity = Artist.map(x => x.Popularity);


        // 1st Chart: Bar Chart for Artist Popularity

        const labels = ['Eminem',
            'Shakira',
            '2pac',
            'Linking Park',
            'AC/DC',
            'METALICA',
        ];

        const data = {
            labels: labels,
            datasets: [{
                label: 'Most Popular Artists',
                backgroundColor: [
                    'rgba(153, 102, 255, 0.4)',
                    'rgba(54, 162, 235, 0.4)',
                    'rgba(255, 206, 86, 0.4)',
                    'rgba(75, 192, 192, 0.4)',
                    'rgba(255, 99, 132, 0.4)',
                    'rgba(255, 159, 64, 0.4)'
                ],
                borderColor: [
                    'rgba(153, 102, 255, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,

                hoverBorderRadius: 50,
                hoverBorderWidth: 2.5,
                hoverBackgroundColor: [
                    'rgba(153, 102, 255, 0.9)',
                    'rgba(54, 162, 235, 0.9)',
                    'rgba(255, 206, 86, 0.9)',
                    'rgba(75, 192, 192, 0.9)',
                    'rgba(255, 99, 132, 0.9)',
                    'rgba(255, 159, 64, 0.9)'
                ],

                data: [5, 4, 3, 2, 1, 0.7],
            }]
        };

        const tooltip = {
            backgroundColor: 'lightgray',
            titleColor: 'black',
            borderColor: 'black',
            borderWidth: 0.425,
            callbacks: {
                label: function (context) {
                },

            }
        };

        const config = {
            type: 'bar',
            data: data,
            options:
            {
                aspectRatio: 1.8,
                plugins: {
                    tooltip,


                    legend: {
                        onClick: (evt, legendItem, legend) => {
                            const index = legend.chart.data.labels.indexOf(legendItem.text);
                            legend.chart.toggleDataVisibility(index);
                            legend.chart.getDataVisibility(index);
                            legend.chart.update();
                        },

                        labels: {
                            generateLabels: (chart) => {
                                let visibility = [];
                                for (let i = 0; i < chart.data.labels.length; i++) {
                                    if (chart.getDataVisibility(i) == true) {
                                        visibility.push(false)
                                    }
                                    else {
                                        visibility.push(true)
                                    }
                                };

                                return chart.data.labels.map(
                                    (label, index) => ({
                                        text: label,
                                        strokeStyle: chart.data.datasets[0].borderColor[index],
                                        fillStyle: chart.data.datasets[0].backgroundColor[index],
                                        hidden: visibility[index]
                                    })
                                )
                            }
                        }
                    },
                },
                indexAxis: 'y',
            }
        };

        // 2nd Chart: Bar Chart for Album Popularity

        const labels2 = ['album1',
            'album2',
            'album3',
            'album4 ',
            'album5',
            'album6',
        ];

        const data2 = {
            labels: labels2,
            datasets: [{
                label: 'Most Popular Albums',
                backgroundColor: [
                    'rgba(153, 102, 255, 0.4)',
                    'rgba(54, 162, 235, 0.4)',
                    'rgba(255, 206, 86, 0.4)',
                    'rgba(75, 192, 192, 0.4)',
                    'rgba(255, 99, 132, 0.4)',
                    'rgba(255, 159, 64, 0.4)'
                ],
                borderColor: [
                    'rgba(153, 102, 255, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,

                hoverBorderRadius: 1,
                hoverBorderWidth: 2.5,
                hoverBackgroundColor: [
                    'rgba(153, 102, 255, 0.9)',
                    'rgba(54, 162, 235, 0.9)',
                    'rgba(255, 206, 86, 0.9)',
                    'rgba(75, 192, 192, 0.9)',
                    'rgba(255, 99, 132, 0.9)',
                    'rgba(255, 159, 64, 0.9)'
                ],

                data: [5, 4, 3, 2, 1, 0.7],
            }]
        };

        const tooltip2 = {
            backgroundColor: 'lightgray',
            titleColor: 'black',
            borderColor: 'black',
            borderWidth: 0.425,
            callbacks: {
                label: function (context) {
                },

            }
        };

        const config2 = {
            type: 'bar',
            data: data2,
            options:
            {
                aspectRatio: 1.8,
                plugins: {
                    tooltip2,


                    legend: {
                        onClick: (evt, legendItem, legend) => {
                            const index = legend.chart.data.labels.indexOf(legendItem.text);
                            legend.chart.toggleDataVisibility(index);
                            legend.chart.getDataVisibility(index);
                            legend.chart.update();
                        },

                        labels: {
                            generateLabels: (chart) => {
                                let visibility = [];
                                for (let i = 0; i < chart.data.labels.length; i++) {
                                    if (chart.getDataVisibility(i) == true) {
                                        visibility.push(false)
                                    }
                                    else {
                                        visibility.push(true)
                                    }
                                };

                                return chart.data.labels.map(
                                    (label, index) => ({
                                        text: label,
                                        strokeStyle: chart.data.datasets[0].borderColor[index],
                                        fillStyle: chart.data.datasets[0].backgroundColor[index],
                                        hidden: visibility[index]
                                    })
                                )
                            }
                        }
                    },

                },
                indexAxis: 'x',
            }
        };

        // 3rd Chart: Pie chart for Tracks per Genre


        const labels3 = ['POP',
            'ROCK',
            'RAP',
            'HIP HOP ',
            'BLUES',
            'JAZZ',
        ];

        const data3 = {
            labels: labels3,
            datasets: [{
                label: 'PERCENTAGE OF TRACKS PER GENRE',
                backgroundColor: [
                    'rgba(153, 102, 255, 0.4)',
                    'rgba(54, 162, 235, 0.4)',
                    'rgba(255, 206, 86, 0.4)',
                    'rgba(75, 192, 192, 0.4)',
                    'rgba(255, 99, 132, 0.4)',
                    'rgba(255, 159, 64, 0.4)'
                ],
                borderColor: [
                    'rgba(153, 102, 255, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,

                hoverBorderRadius: 1,
                hoverBorderWidth: 2.5,
                hoverBackgroundColor: [
                    'rgba(153, 102, 255, 0.9)',
                    'rgba(54, 162, 235, 0.9)',
                    'rgba(255, 206, 86, 0.9)',
                    'rgba(75, 192, 192, 0.9)',
                    'rgba(255, 99, 132, 0.9)',
                    'rgba(255, 159, 64, 0.9)'
                ],

                data: [5, 4, 3, 2, 1, 0.7],
            }]
        };

        const tooltip3 = {
            backgroundColor: 'lightgray',
            titleColor: 'black',
            borderColor: 'black',
            borderWidth: 0.425,
            callbacks: {
                label: function (context) {
                },

            }
        };

        const config3 = {
            type: 'pie',
            data: data3,
            options:
            {
                aspectRatio: 1.8,
                plugins: {
                    tooltip3,
                    legend: {
                        onClick: (evt, legendItem, legend) => {
                            const index = legend.chart.data.labels.indexOf(legendItem.text);
                            legend.chart.toggleDataVisibility(index);
                            legend.chart.getDataVisibility(index);
                            legend.chart.update();
                        },

                        labels: {


                            generateLabels: (chart) => {
                                let visibility = [];
                                for (let i = 0; i < chart.data.labels.length; i++) {
                                    if (chart.getDataVisibility(i) == true) {
                                        visibility.push(false)
                                    }
                                    else {
                                        visibility.push(true)
                                    }
                                };

                                return chart.data.labels.map(
                                    (label, index) => ({
                                        text: label,
                                        strokeStyle: chart.data.datasets[0].borderColor[index],
                                        fillStyle: chart.data.datasets[0].backgroundColor[index],
                                        hidden: visibility[index]
                                    })
                                )
                            }
                        }
                    },

                },
                indexAxis: 'x',
            }
        };

        // 4th Chart: PolarArea Chart for Albums With More Tracks

        const labels4 = ['album1',
            'album2',
            'album3',
            'album4 ',
            'album5',
            'album6',
        ];

        const data4 = {
            labels: labels4,
            datasets: [{
                label: 'Most Popular Albums',
                backgroundColor: [
                    'rgba(153, 102, 255, 0.4)',
                    'rgba(54, 162, 235, 0.4)',
                    'rgba(255, 206, 86, 0.4)',
                    'rgba(75, 192, 192, 0.4)',
                    'rgba(255, 99, 132, 0.4)',
                    'rgba(255, 159, 64, 0.4)'
                ],
                borderColor: [
                    'rgba(153, 102, 255, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,

                hoverBorderRadius: 1,
                hoverBorderWidth: 2.5,
                hoverBackgroundColor: [
                    'rgba(153, 102, 255, 0.9)',
                    'rgba(54, 162, 235, 0.9)',
                    'rgba(255, 206, 86, 0.9)',
                    'rgba(75, 192, 192, 0.9)',
                    'rgba(255, 99, 132, 0.9)',
                    'rgba(255, 159, 64, 0.9)'
                ],

                data: [5, 4, 3, 2, 1, 0.7],
            }]
        };

        const tooltip4 = {
            backgroundColor: 'lightgray',
            titleColor: 'black',
            borderColor: 'black',
            borderWidth: 0.425,
            callbacks: {
                label: function (context) {
                },

            }
        };

        const config4 = {
            type: 'polarArea',
            data: data4,
            options:
            {
                aspectRatio: 1.8,
                plugins: {
                    tooltip4,


                    legend: {
                        onClick: (evt, legendItem, legend) => {
                            const index = legend.chart.data.labels.indexOf(legendItem.text);
                            legend.chart.toggleDataVisibility(index);
                            legend.chart.getDataVisibility(index);
                            legend.chart.update();
                        },

                        labels: {
                            generateLabels: (chart) => {
                                let visibility = [];
                                for (let i = 0; i < chart.data.labels.length; i++) {
                                    if (chart.getDataVisibility(i) == true) {
                                        visibility.push(false)
                                    }
                                    else {
                                        visibility.push(true)
                                    }
                                };

                                return chart.data.labels.map(
                                    (label, index) => ({
                                        text: label,
                                        strokeStyle: chart.data.datasets[0].borderColor[index],
                                        fillStyle: chart.data.datasets[0].backgroundColor[index],
                                        hidden: visibility[index]
                                    })
                                )
                            }
                        }
                    },

                },
                indexAxis: 'x',
            }
        };

        // 5th Chart: Line Chart for Albums by Release Date

        const labels5 = ['album1',
            'album2',
            'album3',
            'album4 ',
            'album5',
            'album6',
        ];

        const data5 = {
            labels: labels5,
            datasets: [{
                label: 'Albums Release Date',
                backgroundColor: [
                    'rgba(153, 102, 255, 0.4)',
                    'rgba(54, 162, 235, 0.4)',
                    'rgba(255, 206, 86, 0.4)',
                    'rgba(75, 192, 192, 0.4)',
                    'rgba(255, 99, 132, 0.4)',
                    'rgba(255, 159, 64, 0.4)'
                ],
                borderColor: [
                    'rgba(153, 102, 255, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1,

                hoverBorderRadius: 1,
                hoverBorderWidth: 2.5,
                hoverBackgroundColor: [
                    'rgba(153, 102, 255, 0.9)',
                    'rgba(54, 162, 235, 0.9)',
                    'rgba(255, 206, 86, 0.9)',
                    'rgba(75, 192, 192, 0.9)',
                    'rgba(255, 99, 132, 0.9)',
                    'rgba(255, 159, 64, 0.9)'
                ],

                data: [1994, 1995, 1996, 1997, 1998, 1999],
            }]
        };

        const tooltip5 = {
            backgroundColor: 'lightgray',
            titleColor: 'black',
            borderColor: 'black',
            borderWidth: 0.425,
            callbacks: {
                label: function (context) {
                },

            }
        };

        const config5 = {
            type: 'line',
            data: data5,
            options:
            {
                aspectRatio: 1.8,
                plugins: {
                    tooltip5,


                    legend: {
                        onClick: (evt, legendItem, legend) => {
                            const index = legend.chart.data.labels.indexOf(legendItem.text);
                            legend.chart.toggleDataVisibility(index);
                            legend.chart.getDataVisibility(index);
                            legend.chart.update();
                        },

                        labels: {
                            generateLabels: (chart) => {
                                let visibility = [];
                                for (let i = 0; i < chart.data.labels.length; i++) {
                                    if (chart.getDataVisibility(i) == true) {
                                        visibility.push(false)
                                    }
                                    else {
                                        visibility.push(true)
                                    }
                                };

                                return chart.data.labels.map(
                                    (label, index) => ({
                                        text: label,
                                        strokeStyle: chart.data.datasets[0].borderColor[index],
                                        fillStyle: chart.data.datasets[0].backgroundColor[index],
                                        hidden: visibility[index]
                                    })
                                )
                            }
                        }
                    },

                },
                indexAxis: 'y',
            }
        };


        let myChart = new Chart(
            document.getElementById('myChart'),
            config
        );

        /* );*/
        /*   });*/

        function renderChart(type) {
            myChart.destroy();
            if (type.value === '1st chart') {
                myChart = new Chart(
                    document.getElementById('myChart'),
                    config,
                    chartTitle.innerHTML = 'Most Popular Artists'
                );
            }
            if (type.value === '2nd chart') {
                myChart = new Chart(
                    document.getElementById('myChart'),
                    config2,
                    chartTitle.innerHTML = 'Most Popular Albums'
                );
            }

            if (type.value === '3rd chart') {
                myChart = new Chart(
                    document.getElementById('myChart'),
                    config3,
                    chartTitle.innerHTML = 'Tracks Per Genre'
                );
            }

            if (type.value === '4th chart') {
                myChart = new Chart(
                    document.getElementById('myChart'),
                    config4,
                    chartTitle.innerHTML = 'Albums with more tracks'
                );
            }

            if (type.value === '5th chart') {
                myChart = new Chart(
                    document.getElementById('myChart'),
                    config5,
                    chartTitle.innerHTML = 'Albums by Release Date'
                );
            }


        }

    </script>

</body>*@

@*[HttpGet]

    public ActionResult GetAllTracksChart(int count, string sortOrder)
    {
        var tracks = unit.Tracks
                    .GetTracksWithEverything()
                    .Select(x => new Track { Id = x.Id, Title = x.Title, DurationSecs = x.DurationSecs, Popularity = x.Popularity})
                    .Take(count);

        switch (sortOrder)
        {
            case "ASC": Tracks = Tracks.OrderBy(x => Popularity).ToList(); break;
            case "DESC": Tracks = Tracks.OrderByDescending(x => Popularity).ToList(); break;
            default : Tracks = Tracks.OrderBy(x => Popularity).ToList(); break;


        }

            return Tracks

    }*@